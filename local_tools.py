# local_tools.py
import chromadb
from sentence_transformers import SentenceTransformer

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
FAQ_FILE_PATH = "./knowledge_base/faq.md"
CHROMA_DB_PATH = "./chroma_db_local"
COLLECTION_NAME = "faq_local_collection"

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ RAG...")
model = SentenceTransformer('all-MiniLM-L6-v2')
client = chromadb.PersistentClient(path=CHROMA_DB_PATH)

# --- –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–ï–†–ï–°–ë–û–†–ö–ê –ë–ê–ó–´ ---
print("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ —á–∏—Å—Ç–æ—Ç—ã –¥–∞–Ω–Ω—ã—Ö...")
try:
    client.delete_collection(name=COLLECTION_NAME)
    print(f"–°—Ç–∞—Ä–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è '{COLLECTION_NAME}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
except Exception:
    print(f"–°—Ç–∞—Ä–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è '{COLLECTION_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞—é –Ω–æ–≤—É—é.")

collection = client.get_or_create_collection(name=COLLECTION_NAME)

try:
    with open(FAQ_FILE_PATH, 'r', encoding='utf-8') as f:
        content = f.read()

    # –¢–µ–ø–µ—Ä—å —ç—Ç–∞ "–Ω–∞—Ä–µ–∑–∫–∞" –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å –Ω–æ–≤—ã–º faq.md
    sections = [sec.strip() for sec in content.split('---') if sec.strip()]
    ids = [f'faq_{i}' for i in range(len(sections))]

    if sections:
        collection.add(documents=sections, ids=ids)
        print(f"‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞ {len(sections)} –∑–∞–ø–∏—Å—è–º–∏.")
    else:
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í faq.md –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–µ–∫—Ü–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É.")
except Exception as e:
    print(f"üî¥ –û–®–ò–ë–ö–ê –ø—Ä–∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π: {e}")


# --- –ò–ù–°–¢–†–£–ú–ï–ù–¢ –ü–û–ò–°–ö–ê ---
def local_faq_search(query: str) -> str:
    print(f"–õ–æ–∫–∞–ª—å–Ω—ã–π RAG: –ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}'")
    if collection.count() == 0:
        return "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ –±—ã–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞."
    results = collection.query(query_texts=[query], n_results=1)
    if not results or not results['documents'] or not results['documents'][0]:
        return "–í –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –æ—Ç–≤–µ—Ç–∞."
    return results['documents'][0][0]


async def local_transfer_to_manager(bot, manager_id, user_info, history, user_question) -> str:
    print(f"–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞': —Ñ–æ—Ä–º–∏—Ä—É—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ...")

    dialog_id_str = user_info.get('dialog_id', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    user_info_str = f"<b>–ù–æ–º–µ—Ä –¥–∏–∞–ª–æ–≥–∞:</b> {dialog_id_str}"

    history_str_list = []
    for msg in history:
        content = msg.get('content', '').replace('<', '&lt;').replace('>', '&gt;')
        role = msg.get('role', 'unknown').upper()
        history_str_list.append(f"<b>{role}:</b>\n<pre>{content}</pre>")
    history_str = "\n".join(history_str_list)

    final_message_html = (
        f"‚ö†Ô∏è <b>[–õ–û–ö–ê–õ–¨–ù–´–ô –ê–ì–ï–ù–¢] –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!</b> ‚ö†Ô∏è\n\n"
        f"<b>{user_info_str}</b>\n\n"
        f"<b>–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞:</b>\n--------------------\n{history_str}"
    )

    if not bot or not manager_id:
        return "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –±—ã–ª–æ –±—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –Ω–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ."

    try:
        await bot.send_message(chat_id=manager_id, text=final_message_html, parse_mode='HTML')
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –¥–∏–∞–ª–æ–≥—É {dialog_id_str} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É (ID: {manager_id})")
        return "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –°–æ–æ–±—â–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –Ω–∏–º."
    except Exception as e:
        print(f"üî¥ –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø–æ –¥–∏–∞–ª–æ–≥—É {dialog_id_str}: {e}")
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É: {e}"

